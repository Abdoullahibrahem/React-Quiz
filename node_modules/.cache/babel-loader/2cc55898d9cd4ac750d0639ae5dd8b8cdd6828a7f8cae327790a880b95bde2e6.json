{"ast":null,"code":"var _jsxFileName = \"E:\\\\COURSES\\\\ultimate-react-course-main\\\\Practicing\\\\10-react-quiz\\\\react-quiz\\\\src\\\\Components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport NextButton from \"./NextButton\";\nimport Progress from \"./Progress\";\nimport FinishScreen from \"./FinishScreen\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  // status: loading, error, ready, active, finished\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataRecieved\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\"\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      return {\n        ...state,\n        answer: action.payload,\n        points: action.payload === question.correctOption ? state.points + question.points : state.points\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    default:\n      throw new Error(\"action unknown\");\n  }\n}\nfunction App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer,\n    points\n  }, dispatch] = useReducer(reducer, initialState);\n  const maxPossiblePoints = questions.reduce((prev, cur) => prev + cur.points, 0);\n  useEffect(function () {\n    async function fetchQuestions() {\n      try {\n        const res = await fetch(\"http://localhost:8000/questions\");\n        const data = await res.json();\n        if (!res.ok) throw new Error(\"Something went Wrong with movies fetching\");\n        dispatch({\n          type: \"dataRecieved\",\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: \"dataFailed\"\n        });\n      }\n    }\n    fetchQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n        quizNum: questions.length,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          quizNum: questions.length,\n          index: index,\n          points: points,\n          maxPossiblePoints: maxPossiblePoints,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n          dispatch: dispatch,\n          answer: answer,\n          index: index,\n          quizNum: questions.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), status === \"finished\" && /*#__PURE__*/_jsxDEV(FinishScreen, {\n        points: points,\n        maxPossiblePoints: maxPossiblePoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0OEOIqjdcb8TdctxTjYZDs56r3E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Main","Loader","Error","StartScreen","Question","NextButton","Progress","FinishScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","questions","status","index","answer","points","reducer","state","action","type","payload","question","at","correctOption","App","_s","dispatch","maxPossiblePoints","reduce","prev","cur","fetchQuestions","res","fetch","data","json","ok","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","quizNum","length","_c","$RefreshReg$"],"sources":["E:/COURSES/ultimate-react-course-main/Practicing/10-react-quiz/react-quiz/src/Components/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport NextButton from \"./NextButton\";\nimport Progress from \"./Progress\";\nimport FinishScreen from \"./FinishScreen\";\n\nconst initialState = {\n  questions: [],\n\n  // status: loading, error, ready, active, finished\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0,\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataRecieved\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\",\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\",\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\",\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      return {\n        ...state,\n        answer: action.payload,\n        points:\n          action.payload === question.correctOption\n            ? state.points + question.points\n            : state.points,\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null,\n      };\n    default:\n      throw new Error(\"action unknown\");\n  }\n}\n\nfunction App() {\n  const [{ questions, status, index, answer, points }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n  const maxPossiblePoints = questions.reduce(\n    (prev, cur) => prev + cur.points,\n    0\n  );\n  useEffect(function () {\n    async function fetchQuestions() {\n      try {\n        const res = await fetch(\"http://localhost:8000/questions\");\n        const data = await res.json();\n        if (!res.ok)\n          throw new Error(\"Something went Wrong with movies fetching\");\n        dispatch({ type: \"dataRecieved\", payload: data });\n      } catch (err) {\n        dispatch({ type: \"dataFailed\" });\n      }\n    }\n    fetchQuestions();\n  }, []);\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main>\n        {status === \"loading\" && <Loader />}\n        {status === \"error\" && <Error />}\n        {status === \"ready\" && (\n          <StartScreen quizNum={questions.length} dispatch={dispatch} />\n        )}\n        {status === \"active\" && (\n          <>\n            <Progress\n              quizNum={questions.length}\n              index={index}\n              points={points}\n              maxPossiblePoints={maxPossiblePoints}\n              answer={answer}\n            />\n            <Question\n              question={questions[index]}\n              dispatch={dispatch}\n              answer={answer}\n            />\n            <NextButton\n              dispatch={dispatch}\n              answer={answer}\n              index={index}\n              quizNum={questions.length}\n            />\n          </>\n        )}\n        {status === \"finished\" && (\n          <FinishScreen points={points} maxPossiblePoints={maxPossiblePoints} />\n        )}\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}