{"ast":null,"code":"var _jsxFileName = \"E:\\\\COURSES\\\\ultimate-react-course-main\\\\Practicing\\\\10-react-quiz\\\\react-quiz\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  // status: loading, error, ready, active, finished\n  status: \"loading\"\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataRecieved\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    default:\n      throw new Error(\"action unknown\");\n  }\n}\nfunction App() {\n  _s();\n  const [{\n    questions,\n    status\n  }, dispatch] = useReducer(reducer, initialState);\n  useEffect(function () {\n    async function fetchQuestions() {\n      try {\n        const res = await fetch(\"http://localhost:8000/questions\");\n        const data = await res.json();\n        if (!res.ok) throw new Error(\"Something went Wrong with movies fetching\");\n        dispatch({\n          type: \"dataRecieved\",\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: \"dataFailed\"\n        });\n      }\n    }\n    fetchQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q2VPbaWD6u/yMCZtxWWtzVvcpPE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Main","Loader","Error","jsxDEV","_jsxDEV","initialState","questions","status","reducer","state","action","type","payload","App","_s","dispatch","fetchQuestions","res","fetch","data","json","ok","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/COURSES/ultimate-react-course-main/Practicing/10-react-quiz/react-quiz/src/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\n\nconst initialState = {\n  questions: [],\n\n  // status: loading, error, ready, active, finished\n  status: \"loading\",\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataRecieved\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\",\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\",\n      };\n    default:\n      throw new Error(\"action unknown\");\n  }\n}\n\nfunction App() {\n  const [{ questions, status }, dispatch] = useReducer(reducer, initialState);\n  useEffect(function () {\n    async function fetchQuestions() {\n      try {\n        const res = await fetch(\"http://localhost:8000/questions\");\n        const data = await res.json();\n        if (!res.ok)\n          throw new Error(\"Something went Wrong with movies fetching\");\n        dispatch({ type: \"dataRecieved\", payload: data });\n      } catch (err) {\n        dispatch({ type: \"dataFailed\" });\n      }\n    }\n    fetchQuestions();\n  }, []);\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main>\n        {status === \"loading\" && <Loader />}\n        {status === \"error\" && <Error />}\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EAEb;EACAC,MAAM,EAAE;AACV,CAAC;AACD,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QACL,GAAGF,KAAK;QACRH,SAAS,EAAEI,MAAM,CAACE,OAAO;QACzBL,MAAM,EAAE;MACV,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGE,KAAK;QACRF,MAAM,EAAE;MACV,CAAC;IACH;MACE,MAAM,IAAIL,KAAK,CAAC,gBAAgB,CAAC;EACrC;AACF;AAEA,SAASW,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAAC;IAAER,SAAS;IAAEC;EAAO,CAAC,EAAEQ,QAAQ,CAAC,GAAGjB,UAAU,CAACU,OAAO,EAAEH,YAAY,CAAC;EAC3ER,SAAS,CAAC,YAAY;IACpB,eAAemB,cAAcA,CAAA,EAAG;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC1D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACH,GAAG,CAACI,EAAE,EACT,MAAM,IAAInB,KAAK,CAAC,2CAA2C,CAAC;QAC9Da,QAAQ,CAAC;UAAEJ,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAEO;QAAK,CAAC,CAAC;MACnD,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZP,QAAQ,CAAC;UAAEJ,IAAI,EAAE;QAAa,CAAC,CAAC;MAClC;IACF;IACAK,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACN,oBACEZ,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA,CAACL,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA,CAACJ,IAAI;MAAAwB,QAAA,GACFjB,MAAM,KAAK,SAAS,iBAAIH,OAAA,CAACH,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAClCrB,MAAM,KAAK,OAAO,iBAAIH,OAAA,CAACF,KAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACd,EAAA,CAzBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}